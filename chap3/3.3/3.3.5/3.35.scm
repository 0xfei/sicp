(load "3.33.scm")
(define (squarer a b)
  (define (process-new-value)
    (if (has-value? b)
      (if (< (get-value b) 0)
        (error "square less than 0 -- " (get-value b))
        (set-value! a (sqrt (get-value b)) me))
      (if (has-value? a)
        (set-value! b (square (get-value a)) me)
        (error "error not valid "))))
  (define (process-forget-value)
    (forget-value! a me)
    (forget-value! b me)
    (process-new-value))
  (define (me request)
    (cond ((eq? request 'set-value)
           (process-new-value))
          ((eq? request 'forget-value)
           (process-forget-value))
          (else 
            (error "not valid request"))))
  (connect a me)
  (connect b me)
  me)


